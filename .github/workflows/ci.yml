name: CI

on:
  push:
    tags:
      - 'v*'

# Required for actions that create annotations/checks (e.g., test-reporter)
permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"

    - name: Run tests with pytest
      run: |
        pytest --cov=openrouter_inspector --cov-report=xml --cov-report=term --junitxml=pytest.xml

    - name: Upload coverage reports to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: matdev83/openrouter-inspector

    - name: Compute tests badge values
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      run: |
        python - <<'PY'
        import os, xml.etree.ElementTree as ET
        root = ET.parse('pytest.xml').getroot()
        total=int(root.attrib.get('tests',0))
        failures=int(root.attrib.get('failures',0))
        errors=int(root.attrib.get('errors',0))
        skipped=int(root.attrib.get('skipped',0))
        passed=total-failures-errors-skipped
        color='brightgreen' if (failures==0 and errors==0) else 'red'
        with open(os.environ['GITHUB_ENV'],'a', encoding='utf-8') as f:
            f.write(f'BADGE_LABEL=tests\n')
            f.write(f'BADGE_MESSAGE={passed}/{total} passing\n')
            f.write(f'BADGE_COLOR={color}\n')
        PY

    - name: Upload test results
      uses: dorny/test-reporter@v1
      if: ${{ (success() || failure()) && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) }}
      continue-on-error: true
      with:
        name: Test Results (Python ${{ matrix.python-version }}, ${{ matrix.os }})
        path: pytest.xml
        reporter: java-junit

  quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run ruff (linting)
      run: ruff check --output-format=github .

    - name: Run black (formatting check)
      run: black --check --diff .

    - name: Run mypy (type checking)
      run: mypy openrouter_inspector

    - name: Run vulture (dead code detection)
      run: vulture --min-confidence 80 openrouter_inspector

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run bandit (security linting)
      run: bandit -r openrouter_inspector -f json -o bandit-report.json --severity-level medium --confidence-level high

    - name: Run safety (dependency vulnerability check)
      run: safety check --output json > safety-report.json

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

