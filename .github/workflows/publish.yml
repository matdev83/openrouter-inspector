name: publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  qa:
    name: QA (lint, type-check, security)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: pip

      - name: Install tooling and deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install ".[complete]"

      - name: Ruff (lint)
        run: ruff check .

      - name: Black (format check)
        run: black --check --diff .

      - name: MyPy (type check)
        run: mypy openrouter_inspector

      - name: Bandit (security)
        run: bandit -c pyproject.toml -r openrouter_inspector

      - name: Safety (dependencies)
        run: safety check --full-report || true

  test:
    name: Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ".[test]"

      - name: Run tests
        run: |
          pytest

  build:
    name: Build distribution
    runs-on: ubuntu-latest
    needs: [qa, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: pip

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Validate tag matches package version
        shell: bash
        run: |
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          FILE_VERSION=$(python -c "import re, pathlib; p=pathlib.Path('openrouter_inspector/__init__.py').read_text(); m=re.search(r"__version__\s*=\s*['\"]([^'\"]+)['\"]", p); print(m.group(1))")
          echo "Tag: ${TAG_VERSION} | Package: ${FILE_VERSION}"
          if [ "${TAG_VERSION}" != "${FILE_VERSION}" ]; then
            echo "Tag version and package version do not match" >&2
            exit 1
          fi

      - name: Build sdist and wheel
        run: python -m build

      - name: Twine check
        run: twine check dist/*

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/p/openrouter-inspector
    steps:
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist


